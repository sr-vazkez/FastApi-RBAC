"""01 Make database

Revision ID: a7c732a8f6e7
Revises: 
Create Date: 2022-09-08 12:36:52.003794

"""
from alembic import op
from app import models
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a7c732a8f6e7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('modules',
    sa.Column('id', models.enable_uuid.BinaryUUID(length=16), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('created_by', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.Column('updated_by', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', models.enable_uuid.BinaryUUID(length=16), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('created_by', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.Column('updated_by', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('actions',
    sa.Column('id', models.enable_uuid.BinaryUUID(length=16), nullable=False),
    sa.Column('action_name', sa.String(length=200), nullable=False),
    sa.Column('value', sa.Boolean(), nullable=False),
    sa.Column('module_id', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('created_by', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.Column('updated_by', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', models.enable_uuid.BinaryUUID(length=16), nullable=False),
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.Column('role_id', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('created_by', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.Column('updated_by', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('role_actions',
    sa.Column('id', models.enable_uuid.BinaryUUID(length=16), nullable=False),
    sa.Column('role_id', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.Column('actions_id', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('created_by', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.Column('updated_by', models.enable_uuid.BinaryUUID(length=16), nullable=True),
    sa.ForeignKeyConstraint(['actions_id'], ['actions.id'], onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('role_actions')
    op.drop_table('users')
    op.drop_table('actions')
    op.drop_table('roles')
    op.drop_table('modules')
    # ### end Alembic commands ###
